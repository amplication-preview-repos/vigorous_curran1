/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FinancialData as PrismaFinancialData } from "@prisma/client";

export class FinancialDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FinancialDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.financialData.count(args);
  }

  async financialDataItems(
    args: Prisma.FinancialDataFindManyArgs
  ): Promise<PrismaFinancialData[]> {
    return this.prisma.financialData.findMany(args);
  }
  async financialData(
    args: Prisma.FinancialDataFindUniqueArgs
  ): Promise<PrismaFinancialData | null> {
    return this.prisma.financialData.findUnique(args);
  }
  async createFinancialData(
    args: Prisma.FinancialDataCreateArgs
  ): Promise<PrismaFinancialData> {
    return this.prisma.financialData.create(args);
  }
  async updateFinancialData(
    args: Prisma.FinancialDataUpdateArgs
  ): Promise<PrismaFinancialData> {
    return this.prisma.financialData.update(args);
  }
  async deleteFinancialData(
    args: Prisma.FinancialDataDeleteArgs
  ): Promise<PrismaFinancialData> {
    return this.prisma.financialData.delete(args);
  }
}
